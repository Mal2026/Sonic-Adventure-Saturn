#include "pch.h"
#include "SADXModInfo.h"
#include "Source.h"


// or #include "stdafx.h" for previous Visual Studio versions
bool CopyrightFreeMusic = false;
bool EmeraldCoast = false;
bool WindyValley = false;
bool Casinopolis = false;
bool IceCap = false;
bool TwinklePark = false;
bool SpeedHighway = false;
bool RedMountain = false;
bool SkyDeck = false;
bool LostWorld = false;
bool HotShelter = false;
bool FinalEgg = false;
extern "C"
{
	__declspec(dllexport) void __cdecl Init(const char* path, const HelperFunctions& helperFunctions)
	{
		const IniFile* config = new IniFile(std::string(path) + "\\config.ini");
		CopyrightFreeMusic = config->getBool("Music", "CopyrightFreeMusic", false);
		if (CopyrightFreeMusic)
		{
			helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\mstcln.wma", "system\\sounddata\\bgm\\RoyaltyFreebgm\\mstcln_free.adx");
			helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\s_square.wma", "system\\sounddata\\bgm\\RoyaltyFreebgm\\s_square_free.adx");
			helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\ecoast1.wma", "system\\sounddata\\bgm\\RoyaltyFreebgm\\ecoast1_free.adx");
			helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\ecoast2.wma", "system\\sounddata\\bgm\\RoyaltyFreebgm\\ecoast2_free.adx");
			helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\twnklpk2.wma", "system\\sounddata\\bgm\\RoyaltyFreebgm\\twnklpk2_free.adx");
		}
			EmeraldCoast = config->getBool("VanillaMusic", "EmeraldCoast", false);

			if (EmeraldCoast)
			{ 
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\ecoast1.wma", "system\\SoundData\\bgm\\wma\\ecoast1.adx");
			    helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\ecoast2.wma", "system\\SoundData\\bgm\\wma\\ecoast2.adx");
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\ecoast3.wma", "system\\SoundData\\bgm\\wma\\ecoast3.adx");
            }
			WindyValley = config->getBool("VanillaMusic", "WindyValley", false);

			if (WindyValley)
			{
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\wndyvly1.wma", "system\\SoundData\\bgm\\wma\\wndyvly1.adx");
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\wndyvly2.wma", "system\\SoundData\\bgm\\wma\\wndyvly2.adx");
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\wndyvly3.wma", "system\\SoundData\\bgm\\wma\\wndyvly3.adx");
			}
			Casinopolis = config->getBool("VanillaMusic", "Casinopolis", false);

			if (Casinopolis)
			{
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\casino1.wma", "system\\SoundData\\bgm\\wma\\casino1.adx");
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\casino2.wma", "system\\SoundData\\bgm\\wma\\casino2.adx");
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\casino3.wma", "system\\SoundData\\bgm\\wma\\casino3.adx");
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\casino4.wma", "system\\SoundData\\bgm\\wma\\casino4.adx");
			}
			IceCap = config->getBool("VanillaMusic", "IceCap", false);

			if (IceCap)
			{
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\icecap1.wma", "system\\SoundData\\bgm\\wma\\icecap1.adx");
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\icecap2.wma", "system\\SoundData\\bgm\\wma\\icecap2.adx");
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\icecap3.wma", "system\\SoundData\\bgm\\wma\\icecap3.adx");
			}
			TwinklePark = config->getBool("VanillaMusic", "TwinklePark", false);

			if (TwinklePark)
			{
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\twnklpk1.wma", "system\\SoundData\\bgm\\wma\\twnklpk1.adx");
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\twnklpk2.wma", "system\\SoundData\\bgm\\wma\\twnklpk2.adx");
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\twnklpk3.wma", "system\\SoundData\\bgm\\wma\\twnklpk3.adx");
			}
			SpeedHighway = config->getBool("VanillaMusic", "SpeedHighway", false);

			if (SpeedHighway)
			{
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\highway1.wma", "system\\SoundData\\bgm\\wma\\highway1.adx");
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\highway2.wma", "system\\SoundData\\bgm\\wma\\highway2.adx");
			}
			RedMountain = config->getBool("VanillaMusic", "RedMountain", false);

			if (RedMountain)
			{
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\redmntn1.wma", "system\\SoundData\\bgm\\wma\\redmntn1.adx");
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\redmntn2.wma", "system\\SoundData\\bgm\\wma\\redmntn2.adx");
			}
			SkyDeck = config->getBool("VanillaMusic", "SkyDeck", false);

			if (SkyDeck)
			{
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\skydeck1.wma", "system\\SoundData\\bgm\\wma\\skydeck1.adx");
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\skydeck2.wma", "system\\SoundData\\bgm\\wma\\skydeck2.adx");
			}
			LostWorld = config->getBool("VanillaMusic", "LostWorld", false);

			if (LostWorld)
			{
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\lstwrld1.wma", "system\\SoundData\\bgm\\wma\\lstwrld1.adx");
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\lstwrld2.wma", "system\\SoundData\\bgm\\wma\\lstwrld2.adx");
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\lstwrld3.wma", "system\\SoundData\\bgm\\wma\\lstwrld3.adx");
			}
			HotShelter = config->getBool("VanillaMusic", "HotShelter", false);

			if (HotShelter)
			{
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\shelter1.wma", "system\\SoundData\\bgm\\wma\\shelter1.adx");
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\shelter2.wma", "system\\SoundData\\bgm\\wma\\shelter2.adx");
			}
			FinalEgg = config->getBool("VanillaMusic", "FinalEgg", false);
			delete config;

			if (FinalEgg)
			{
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\finaleg1.wma", "system\\SoundData\\bgm\\wma\\finaleg1.adx");
				helperFunctions.ReplaceFile("system\\sounddata\\bgm\\wma\\finaleg2.wma", "system\\SoundData\\bgm\\wma\\finaleg2.adx");
			}
            

			{
				*(NJS_MODEL_SADX*)0x008BEAA8 = attach_004BEAA8;
				*(NJS_MODEL_SADX*)0x008BF260 = attach_004BF260;
				*(NJS_MODEL_SADX*)0x008BE270 = attach_004BE270;

			}
	}   

	__declspec(dllexport) void __cdecl OnRenderEnd()
	{
		*(NJS_MODEL_SADX*)0x008B6010 = attach_004B6010_001;
		*(NJS_MODEL_SADX*)0x008B6470 = attach_004B6470_001;
		*(NJS_MODEL_SADX*)0x008B679C = attach_004B679C_001;//Spring

		*(NJS_MODEL_SADX*)0x008B5498 = attach_004B5498;
		*(NJS_MODEL_SADX*)0x008B58F8 = attach_004B58F8;
	}



	__declspec(dllexport) ModInfo SADXModInfo = { ModLoaderVer }; // This is needed for the Mod Loader to recognize the DLL.
}
